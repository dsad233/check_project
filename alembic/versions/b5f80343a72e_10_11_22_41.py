"""10/11 22:41

Revision ID: b5f80343a72e
Revises: 
Create Date: 2024-10-11 22:41:39.327062

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b5f80343a72e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("password", sa.String(length=255), nullable=True),
        sa.Column(
            "role",
            sa.Enum("MSO 최고권한", "최고관리자", "관리자", "사원", name="user_role"),
            nullable=True,
        ),
        sa.Column(
            "part",
            sa.Enum(
                "외래팀",
                "관리",
                "의사",
                "총괄 상담실장",
                "간호조무사",
                "코디네이터",
                "피부관리자",
                "상담실장",
                name="user_part",
            ),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_yn", sa.String(length=1), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "annual_leaves",
        sa.Column("annual_leave_id", sa.Integer(), nullable=False),
        sa.Column("manager_id", sa.Integer(), nullable=False),
        sa.Column("proposer_id", sa.Integer(), nullable=False),
        sa.Column("application_date", sa.DateTime(), nullable=True),
        sa.Column(
            "type",
            sa.Enum(
                "annual_leave",
                "sick_leave",
                "bereavement_leave",
                "parental_leave",
                "leave_of_absence",
                "official_leave",
                name="leave_type",
            ),
            nullable=True,
        ),
        sa.Column("date_count", sa.Integer(), nullable=True),
        sa.Column(
            "application_status",
            sa.Enum("pending", "approved", "rejected", name="application_status"),
            nullable=True,
        ),
        sa.Column("proposer_note", sa.Text(), nullable=True),
        sa.Column("manager_note", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_yn", sa.String(length=1), nullable=True),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["proposer_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("annual_leave_id"),
    )
    op.create_table(
        "commutes",
        sa.Column("commute_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=True),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column("work_time", sa.Integer(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_yn", sa.String(length=1), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("commute_id"),
    )
    op.create_table(
        "overtimes",
        sa.Column("overtime_id", sa.Integer(), nullable=False),
        sa.Column("manager_id", sa.Integer(), nullable=False),
        sa.Column("proposer_id", sa.Integer(), nullable=False),
        sa.Column("application_date", sa.DateTime(), nullable=True),
        sa.Column("ot_30", sa.Integer(), nullable=True),
        sa.Column("ot_60", sa.Integer(), nullable=True),
        sa.Column("ot_90", sa.Integer(), nullable=True),
        sa.Column("ot_120", sa.Integer(), nullable=True),
        sa.Column("application_note", sa.Text(), nullable=True),
        sa.Column("proposer_note", sa.Text(), nullable=True),
        sa.Column("processed_date", sa.DateTime(), nullable=True),
        sa.Column(
            "application_status",
            sa.Enum("pending", "approved", "rejected", name="application_status"),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_yn", sa.String(length=1), nullable=True),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["proposer_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("overtime_id"),
    )
    op.create_table(
        "personnel_records",
        sa.Column("personnel_record_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("manager_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column(
            "category",
            sa.Enum("평가", "경고", "감사", "감봉", "해고", name="record_category"),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_yn", sa.String(length=1), nullable=True),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("personnel_record_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("personnel_records")
    op.drop_table("overtimes")
    op.drop_table("commutes")
    op.drop_table("annual_leaves")
    op.drop_table("users")
    # ### end Alembic commands ###
